set nocompatible
filetype off
let mapleader = ","

if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#begin(expand('~/.vim/bundle/'))
NeoBundleFetch 'Shougo/neobundle.vim'

NeoBundle 'scrooloose/nerdtree'
NeoBundle 'csapprox'
NeoBundle 'vim-scripts/dbext.vim'
NeoBundle 'vim-ruby/vim-ruby'
NeoBundle 'tpope/vim-repeat'
NeoBundle 'tpope/vim-rake'
NeoBundle 'tpope/vim-rails'
NeoBundle 'thoughtbot/vim-rspec'
NeoBundle 'groenewege/vim-less'
NeoBundle 'tpope/vim-surround'
NeoBundle 'tComment'
NeoBundle 'MarcWeber/vim-addon-mw-utils'
NeoBundle 'tomtom/tlib_vim'
NeoBundle 'Shougo/neosnippet'
NeoBundle 'Shougo/neosnippet-snippets'
NeoBundle 'mattn/emmet-vim'
NeoBundle 'tpope/vim-endwise'
NeoBundle 'tpope/vim-bundler'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'terryma/vim-multiple-cursors'
NeoBundle 'kien/ctrlp.vim'
NeoBundle 'editorconfig/editorconfig-vim'
NeoBundle 'sandeepravi/refactor-rails.vim'
NeoBundle 'rstacruz/sparkup'
NeoBundle 'vim-scripts/BufOnly.vim'
NeoBundle 'Shougo/vimproc.vim', {'build': {'unix': 'make'}}
NeoBundle 'Shougo/vimshell.vim'
NeoBundle 'Shougo/neocomplete.vim'
NeoBundle 'Shougo/unite.vim'
NeoBundle 'trapd00r/neverland-vim-theme'
NeoBundle 'ecomba/vim-ruby-refactoring'
NeoBundle 'ck3g/vim-change-hash-syntax'
NeoBundle 'Raimondi/delimitMate'
NeoBundle 'wesQ3/vim-windowswap'
NeoBundle 'vim-scripts/TaskList.vim'
NeoBundle 'majutsushi/tagbar'
NeoBundle 'kana/vim-textobj-user'
NeoBundle 'nelstrom/vim-textobj-rubyblock'
NeoBundle 'vim-scripts/ZoomWin'
NeoBundle 'AnsiEsc.vim'
NeoBundle 'mileszs/ack.vim'
NeoBundle 'Lokaltog/powerline'
NeoBundle 'kchmck/vim-coffee-script'
NeoBundle 'mustache/vim-mustache-handlebars'
NeoBundle 'vim-scripts/JavaScript-Indent'
NeoBundle 'jelera/vim-javascript-syntax'
NeoBundle 'nathanaelkane/vim-indent-guides'
NeoBundle 'ekalinin/Dockerfile.vim'
NeoBundle 'marijnh/tern_for_vim', {'build': {'unix': 'npm install'}}
NeoBundle 'godlygeek/tabular'
NeoBundle 'tommcdo/vim-exchange'
NeoBundle 'listmaps.vim'
NeoBundle 'Valloric/vim-instant-markdown'

call neobundle#end()
filetype plugin indent on    " required
NeoBundleCheck

syntax on

" Vim options
set number
set hlsearch
set incsearch
set smartindent
set tabstop=2
set shiftwidth=2
set expandtab
set backspace=indent,eol,start
set infercase
set wildmenu
set wildmode=full
set mouse=a
set nowrap

" CSApprox, for emulating gvim colors on the terminal
if !has('gui_running') && exists(':CSApprox')
  CSApprox
endif

if &term =~ '^\(xterm\|screen\)$' && $COLORTERM == 'gnome-terminal'
  set t_Co=256
endif

runtime macros/matchit.vim " match the opening/closign html tag when pressing '%'
" runtime plugin/keymaps.vim " custom keymaps
" runtime plugin/neocompletion_config.vim " neocompletion config

" auto exit the last NERDTree window when the last 'content' window is closed
autocmd vimenter * NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" Indent-Guides Plugin
let g:indent_guides_guide_size = 1
let g:indent_guides_exclude_filetypes = ['help', 'nerdtree']

" Rsense
let g:rsenseHome = $RSENSE_HOME
let g:rsenseUseOmniFunc = 1

" VimShell
let g:vimshell_user_prompt = 'fnamemodify(getcwd(), ":~")'
let g:vimshell_prompt =  '$ '

" set a dictionary for vim dictionary completion
set dictionary=/usr/share/dict/words

" vim theme
colorscheme neverland

" Need to add it for fix html identation since it was changed in vim 7.4
let g:html_indent_inctags = "html,body,head,tbody"

" Automatically closes Fugitive.vim buffers when leaving them
autocmd BufReadPost fugitive://* set bufhidden=delete

" Neosnippet
" Press Ctrl-k for select and expand a snippet
" Also used for jumping positions inside snippet
imap <C-k>     <Plug>(neosnippet_expand_or_jump)
smap <C-k>     <Plug>(neosnippet_expand_or_jump)
xmap <C-k>     <Plug>(neosnippet_expand_target)

imap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: pumvisible() ? "\<C-n>" : "\<TAB>"
smap <expr><TAB> neosnippet#expandable_or_jumpable() ?
\ "\<Plug>(neosnippet_expand_or_jump)"
\: "\<TAB>"

" For snippet_complete marker.
if has('conceal')
  set conceallevel=2 concealcursor=i
endif

set foldmethod=syntax
set foldlevel=3
