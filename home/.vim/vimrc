set nocompatible
filetype off
let mapleader = ","

if has('vim_starting')
  set runtimepath+=~/.vim/bundle/neobundle.vim/
endif

call neobundle#begin(expand('~/.vim/bundle/'))
NeoBundleFetch 'Shougo/neobundle.vim'

"Async actions
NeoBundle 'Shougo/vimproc.vim', {'build': {'unix': 'make', 'windows': 'mingw32-make -f make_mingw32.mak'}}
NeoBundle 'tpope/vim-dispatch'

"Commands and mappings
NeoBundle 'AndrewRadev/linediff.vim'
NeoBundle 'AndrewRadev/splitjoin.vim'
NeoBundle 'bryanthankins/vim-aspnetide'
NeoBundle 'godlygeek/tabular'
NeoBundle 'kana/vim-textobj-user'
NeoBundle 'kris89/vim-multiple-cursors'
NeoBundle 'listmaps.vim'
NeoBundle 'tomtom/tComment_vim'
NeoBundle 'tpope/vim-projectionist'
NeoBundle 'tpope/vim-repeat'
NeoBundle 'tpope/vim-surround'
NeoBundle 'tpope/vim-unimpaired'
NeoBundle 'vim-scripts/BufOnly.vim'
NeoBundle 'vim-scripts/dbext.vim'

"Completions and snippets
NeoBundle 'honza/vim-snippets'
NeoBundle 'marijnh/tern_for_vim', {'build': {'unix': 'npm install', 'windows': 'npm install'}}
NeoBundle 'nosami/Omnisharp'
NeoBundle 'Raimondi/delimitMate'
NeoBundle 'rstacruz/sparkup'
NeoBundle 'Shougo/neocomplete.vim'
NeoBundle 'sirver/ultisnips'
NeoBundle 'tpope/vim-endwise'
NeoBundle 'wellle/tmux-complete.vim'

"Colorschemes
NeoBundle 'csapprox'
NeoBundle 'trapd00r/neverland-vim-theme'

"File finders and browsers
NeoBundle 'kien/ctrlp.vim'
NeoBundle 'rking/ag.vim'
NeoBundle 'scrooloose/nerdtree'
NeoBundle 'Shougo/unite.vim'

"Integrations
NeoBundle 'epeli/slimux'
NeoBundle 'tpope/vim-bundler'
NeoBundle 'tpope/vim-fugitive'

"Interface
NeoBundle 'bling/vim-airline'
NeoBundle 'christoomey/vim-tmux-navigator'
NeoBundle 'majutsushi/tagbar'
NeoBundle 'vim-scripts/TaskList.vim'
NeoBundle 'vim-scripts/ZoomWin'
NeoBundle 'wesQ3/vim-windowswap'

"Language specific
NeoBundle 'ck3g/vim-change-hash-syntax'
NeoBundle 'nelstrom/vim-textobj-rubyblock'
NeoBundle 'suan/vim-instant-markdown'
NeoBundle 'tpope/vim-markdown'
NeoBundle 'tpope/vim-rake'
NeoBundle 'tpope/vim-rails'
NeoBundle 'vim-ruby/vim-ruby'

"Syntax and indetation
NeoBundle 'AnsiEsc.vim'
NeoBundle 'bronson/vim-trailing-whitespace'
NeoBundle 'editorconfig/editorconfig-vim'
NeoBundle 'ekalinin/Dockerfile.vim'
NeoBundle 'gregsexton/MatchTag'
NeoBundle 'groenewege/vim-less'
NeoBundle 'jelera/vim-javascript-syntax'
NeoBundle 'kchmck/vim-coffee-script'
NeoBundle 'mustache/vim-mustache-handlebars'
NeoBundle 'nathanaelkane/vim-indent-guides'
NeoBundle 'vim-scripts/JavaScript-Indent'

"Shell
NeoBundle 'oplatek/Conque-Shell'
NeoBundle 'Shougo/vimshell.vim'


call neobundle#end()
filetype plugin indent on    " required
NeoBundleCheck

syntax on

" Vim options
set number
set ignorecase
set hlsearch
set incsearch
set smartindent
set tabstop=2
set shiftwidth=2
set expandtab
set backspace=indent,eol,start
set infercase
set wildmenu
set wildmode=full
set mouse=a
set nowrap
set shiftround

" CSApprox, for emulating gvim colors on the terminal
if !has('gui_running') && exists(':CSApprox')
  CSApprox
endif

if &term =~ '^\(xterm\|screen\)$' && $COLORTERM == 'gnome-terminal'
  set t_Co=256
endif

if &term =~ '^screen'
    " tmux will send xterm-style keys when its xterm-keys option is on
    execute "set <xUp>=\e[1;*A"
    execute "set <xDown>=\e[1;*B"
    execute "set <xRight>=\e[1;*C"
    execute "set <xLeft>=\e[1;*D"
endif

runtime macros/matchit.vim " match the opening/closign html tag when pressing '%'

" auto exit the last NERDTree window when the last 'content' window is closed
autocmd vimenter * NERDTree
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif

" Indent-Guides Plugin
let g:indent_guides_guide_size = 1
let g:indent_guides_exclude_filetypes = ['help', 'nerdtree']

" Rsense
let g:rsenseHome = $RSENSE_HOME
let g:rsenseUseOmniFunc = 1

" VimShell
let g:vimshell_user_prompt = 'fnamemodify(getcwd(), ":~")'
let g:vimshell_prompt =  '$ '

" set a dictionary for vim dictionary completion
set dictionary=/usr/share/dict/words

" vim theme
colorscheme neverland

" Need to add it for fix html identation since it was changed in vim 7.4
let g:html_indent_inctags = "html,body,head,tbody"

" Automatically closes Fugitive.vim buffers when leaving them
autocmd BufReadPost fugitive://* set bufhidden=delete

set foldmethod=syntax
set foldlevel=3

" CtrlP
let g:ctrlp_max_files = 100000
let g:ctrlp_working_path_mode = 0

" The Silver Searcher
if executable('ag')
  " Use ag over grep
  set grepprg=ag\ --nogroup\ --nocolor\ --smart-case

  " Use ag in CtrlP for listing files. Lightning fast and respects .gitignore
  let g:ctrlp_user_command = 'ag %s -l --nocolor -g ""'

  " ag is fast enough that CtrlP doesn't need to cache
  let g:ctrlp_use_caching = 0
endif

" vim-rails
let g:rails_projections = {
    \     "app/presenters/*": {
    \        "type": "presenter"
    \     }
    \   }

"Tmux complete
let g:tmuxcomplete#trigger = ''

" Vim AirLine
let g:airline_powerline_fonts=1
let g:airline#extensions#tabline#enabled = 1

" For better integration of vim-multiple-cursos and Neocomplete
function! Multiple_cursors_before()
  exe 'NeoCompleteLock'
  echo 'Disabled autocomplete'
endfunction

function! Multiple_cursors_after()
  exe 'NeoCompleteUnlock'
  echo 'Enabled autocomplete'
endfunction
